name: CI

on: [push, pull_request]

env:
  FORCE_COLOR: true
  NODE_VERSION: latest

jobs:
  setup:
    name: Lint Package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run Linter
        run: yarn lint

  test:
    needs: [setup]
    name: Test Packages (${{ matrix.node_version}})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node_version: [16, 18]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run Tests
        run: yarn test

  test-coverage:
    needs: [setup]
    name: Test Packages with Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Run Coverage
        run: yarn coverage

  build:
    needs: [test, test-coverage]
    name: Build Packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Packages
        run: yarn build
